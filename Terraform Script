#Provider Configuration (provider.tf):**
    
   terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "5.53.0"
    }
  }
}
    
  provider "aws" {
  # Configuration options
  region = "ap-south-1"
  }

   ##EC2 Instance (ec2.tf):**

    resource "aws_instance" "jenkins_server" {
      ami           = "ami-0f58b397bc5c1f2e8"
      instance_type = "t2.micro"

      tags = {
        Name = "JenkinsServer"
      }
    }

    #S3 Bucket (s3.tf):**

    resource "aws_s3_bucket" "jenkins_artifacts" {
      bucket = "jenkins-artifacts-bucket"
    }

##Lambda Function (lambda.tf):**
    
    resource "aws_lambda_function" "example_lambda" {
      filename         = "lambda_function_payload.zip"
      function_name    = "example_lambda"
      role             = aws_iam_role.lambda_exec.arn
      handler          = "index.handler"
      source_code_hash = filebase64sha256("lambda_function_payload.zip")
      runtime          = "python 3.1.2"
    }

    resource "aws_iam_role" "lambda_exec" {
      name = "lambda_exec_role"

      assume_role_policy = jsonencode({
        Version = "2012-10-17"
        Statement = [{
          Action    = "sts:AssumeRole"
          Effect    = "Allow"
          Principal = {
            Service = "lambda.amazonaws.com"
          }
        }]
      })
    }

    resource "aws_iam_role_policy_attachment" "lambda_attach" {
      role       = aws_iam_role.lambda_exec.name
      policy_arn = "arn:aws:ec2:ap-south-1:471112983657:instance/i-0a27592b3b95da911"
    }
